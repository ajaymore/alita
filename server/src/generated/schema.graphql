### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Aggregate {
  count: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Group implements Node {
  """Unique identifier for the resource"""
  _id: ID!

  """Item creation date"""
  createdAt: DateTime!
  members: [User!]!
  name: String

  """Item updation date"""
  updatedAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  announce(announcement: String!): String
  createGroup(name: String!): Group
  createRole(name: String!): Role
  createUser(email: String!, groups: [ID!]!, name: String!, roles: [ID!]!): User
  modifyGroup(_id: ID!, isRemoveOperation: Boolean!, members: [ID!]!): Group
  modifyRole(_id: ID!, isRemoveOperation: Boolean!, members: [ID!]!): Role
  removeGroup(_id: ID!): Boolean
  removeRole(_id: ID!): Boolean
  removeUser(_id: ID!): User
  updateUser(_id: ID!, blocked: Boolean, email: String, groups: [ID!], name: String, roles: [ID!]): User
}

interface Node {
  """Unique identifier for the resource"""
  _id: ID!

  """Item creation date"""
  createdAt: DateTime!

  """Item updation date"""
  updatedAt: DateTime!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
}

type Query {
  groups: [Group!]
  roles: [Role!]
  testQuery: String
  users: [User!]
}

type Role implements Node {
  """Unique identifier for the resource"""
  _id: ID!

  """Item creation date"""
  createdAt: DateTime!
  members: [User!]!
  name: String

  """Item updation date"""
  updatedAt: DateTime!
}

input SortInput {
  sortBy: String!
  sortDirection: String!
}

type Subscription {
  announcementSent: String
}

type User implements Node {
  """Unique identifier for the resource"""
  _id: ID!
  blocked: Boolean

  """Item creation date"""
  createdAt: DateTime!
  email: String
  groups: [Group!]
  isAdmin: Boolean
  name: String
  roles: [Role!]

  """Item updation date"""
  updatedAt: DateTime!
}

type UserConnection {
  aggregate: Aggregate
  edges: [UserEdge!]
  pageInfo: PageInfo
}

type UserEdge {
  cursor: String
  node: User
}

type UserPagination {
  aggregate: Aggregate
  currentPage: Int
  edges: [UserEdge!]
  pages: Int
}
