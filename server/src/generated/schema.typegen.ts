/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import * as ctx from "../context"
import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  SortInput: { // input type
    sortBy: string; // String!
    sortDirection: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Aggregate: { // root type
    count?: number | null; // Int
  }
  Group: { // root type
    _id: string; // ID!
    createdAt: any; // DateTime!
    name?: string | null; // String
    updatedAt: any; // DateTime!
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage?: boolean | null; // Boolean
    hasPreviousPage?: boolean | null; // Boolean
    startCursor?: string | null; // String
  }
  Query: {};
  Role: { // root type
    _id: string; // ID!
    createdAt: any; // DateTime!
    name?: string | null; // String
    updatedAt: any; // DateTime!
  }
  Subscription: {};
  User: { // root type
    _id: string; // ID!
    blocked?: boolean | null; // Boolean
    createdAt: any; // DateTime!
    email?: string | null; // String
    name?: string | null; // String
    updatedAt: any; // DateTime!
  }
  UserConnection: { // root type
    aggregate?: NexusGenRootTypes['Aggregate'] | null; // Aggregate
    edges?: NexusGenRootTypes['UserEdge'][] | null; // [UserEdge!]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  UserEdge: {};
  UserPagination: { // root type
    aggregate?: NexusGenRootTypes['Aggregate'] | null; // Aggregate
    currentPage?: number | null; // Int
    edges?: NexusGenRootTypes['UserEdge'][] | null; // [UserEdge!]
    pages?: number | null; // Int
  }
  Node: NexusGenRootTypes['Group'] | NexusGenRootTypes['User'] | NexusGenRootTypes['Role'];
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
  JSON: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  SortInput: NexusGenInputs['SortInput'];
}

export interface NexusGenFieldTypes {
  Aggregate: { // field return type
    count: number | null; // Int
  }
  Group: { // field return type
    _id: string; // ID!
    createdAt: any; // DateTime!
    members: NexusGenRootTypes['User'][]; // [User!]!
    name: string | null; // String
    updatedAt: any; // DateTime!
  }
  Mutation: { // field return type
    announce: string | null; // String
    createGroup: NexusGenRootTypes['Group'] | null; // Group
    createRole: NexusGenRootTypes['Role'] | null; // Role
    createUser: NexusGenRootTypes['User'] | null; // User
    modifyGroup: NexusGenRootTypes['Group'] | null; // Group
    modifyRole: NexusGenRootTypes['Role'] | null; // Role
    removeGroup: boolean | null; // Boolean
    removeRole: boolean | null; // Boolean
    removeUser: NexusGenRootTypes['User'] | null; // User
    updateUser: NexusGenRootTypes['User'] | null; // User
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean | null; // Boolean
    hasPreviousPage: boolean | null; // Boolean
    startCursor: string | null; // String
  }
  Query: { // field return type
    groups: NexusGenRootTypes['Group'][] | null; // [Group!]
    roles: NexusGenRootTypes['Role'][] | null; // [Role!]
    testQuery: string | null; // String
    users: NexusGenRootTypes['User'][] | null; // [User!]
  }
  Role: { // field return type
    _id: string; // ID!
    createdAt: any; // DateTime!
    members: NexusGenRootTypes['User'][]; // [User!]!
    name: string | null; // String
    updatedAt: any; // DateTime!
  }
  Subscription: { // field return type
    announcementSent: string | null; // String
  }
  User: { // field return type
    _id: string; // ID!
    blocked: boolean | null; // Boolean
    createdAt: any; // DateTime!
    email: string | null; // String
    groups: NexusGenRootTypes['Group'][] | null; // [Group!]
    isAdmin: boolean | null; // Boolean
    name: string | null; // String
    roles: NexusGenRootTypes['Role'][] | null; // [Role!]
    updatedAt: any; // DateTime!
  }
  UserConnection: { // field return type
    aggregate: NexusGenRootTypes['Aggregate'] | null; // Aggregate
    edges: NexusGenRootTypes['UserEdge'][] | null; // [UserEdge!]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  UserEdge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['User'] | null; // User
  }
  UserPagination: { // field return type
    aggregate: NexusGenRootTypes['Aggregate'] | null; // Aggregate
    currentPage: number | null; // Int
    edges: NexusGenRootTypes['UserEdge'][] | null; // [UserEdge!]
    pages: number | null; // Int
  }
  Node: { // field return type
    _id: string; // ID!
    createdAt: any; // DateTime!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    announce: { // args
      announcement: string; // String!
    }
    createGroup: { // args
      name: string; // String!
    }
    createRole: { // args
      name: string; // String!
    }
    createUser: { // args
      email: string; // String!
      groups: string[]; // [ID!]!
      name: string; // String!
      roles: string[]; // [ID!]!
    }
    modifyGroup: { // args
      _id: string; // ID!
      isRemoveOperation: boolean; // Boolean!
      members: string[]; // [ID!]!
    }
    modifyRole: { // args
      _id: string; // ID!
      isRemoveOperation: boolean; // Boolean!
      members: string[]; // [ID!]!
    }
    removeGroup: { // args
      _id: string; // ID!
    }
    removeRole: { // args
      _id: string; // ID!
    }
    removeUser: { // args
      _id: string; // ID!
    }
    updateUser: { // args
      _id: string; // ID!
      blocked?: boolean | null; // Boolean
      email?: string | null; // String
      groups?: string[] | null; // [ID!]
      name?: string | null; // String
      roles?: string[] | null; // [ID!]
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  Node: "Group" | "User" | "Role"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Aggregate" | "Group" | "Mutation" | "PageInfo" | "Query" | "Role" | "Subscription" | "User" | "UserConnection" | "UserEdge" | "UserPagination";

export type NexusGenInputNames = "SortInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = "Node";

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "JSON" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}